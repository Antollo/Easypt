

import("console");
import("system");

console.writeLine("abc defgh");
"abc defgh".insert("abc defgh".begin().+(1), "x".begin(), "x".end());
console.writeLine("abc defgh".find("de", 0));
console.writeLine("abc defgh");
var x.=(console.readLine());
x.resize(6,"f");
console.writeLine(x);

var a;
var uuu;
if (a.hasChild("b"), { console.writeLine("not ok"); });
a.addChild("b", Int());
a.addChild(uuu);
if (a.hasChild("b"), { console.writeLine("ok"); });
console.writeLine(a.getParent().getName());

console.beep();

#try({
    throw(OutOfRangeException("bab"));
}, {
    basicOut(args[0].get());
});#

#system.callShellCommand("cls");#
#basicOut(system.getEnvironmentVariable("PATH"));#

var Bird.=({
    var color.=(args[0].get());
    var tweet.=({ basicOut("tweet"); });
    var tweetNTimes.=({
        for (var i.=(0).<, args[0], i.++, {
            tweet();
        });
    });
    var getColor.=({
        # current workaround to return reference #
        addChild("return", color);
    });
    var return;
    return.addChild(color);
    return.addChild(tweet);
    return.addChild(tweetNTimes);
    return.addChild(getColor);
});

var crow.=(Bird("black"));

crow.tweet();
basicOut(crow.getColor());
