#import("time");
import("algorithm");
import("console");
import("memory");
import("math");#

import("console");
import("devices");
import("time");

#auto futureA.=(Task(Root, {
    for (auto i.=(0).<, 10, i.++, {
        console.writeLine("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
    });
    return("Future A ended.");
}));

auto futureB.=(Task(Root, {
    for (auto i.=(0).<, 10, i.++, {
        console.writeLine("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
    });
    return("Future B ended.");
}));#

auto str.=("C");

var EventListener.=(Class(
    Object,
    var task,
    {
        task.=(Task(Root, {
            auto predicate.=(args[0].get());
            auto callback.=(args[1].get());
            while (true, {
                if (predicate(), {
                    callback();
                    auto condition.=(predicate());
                    while (condition, {
                        condition.=(predicate());
                    });
                });
            });
        }, args[0].get(), args[1].get()));
    }.setName("EventListener")
));

auto ev.=(EventListener({
    return(devices.keyboard.isKeyDown("c"));
}, {
    basicOut("c pressed");
}));


auto futureC.=(Task(getThis(), {
    for (auto i.=(0).<, 10, i.++, {
        console.writeLine("CCCccccc");
    });
    return("Future C ended.");
}));
#console.writeLine(futureA.get());
console.writeLine(futureB.get());#
console.writeLine(futureC.get());

console.writeLine("Is that ok?");
#auto A.=(Class(
    Object, 
    {
        basicOut("helloA");
    }.setName("A"),
    Object, 
    {
        basicOut("goodbye");
    }.setName("~~"),
));
auto a.=(A());
auto B.=(Class(
    A,
    {
        A();
        basicOut("helloB");
    }.setName("B")
));
B();
auto f.=({f();});

"launchArgs".debugTree();


auto b.=(B());#
#b.debugTree();#
#getThis().debugTree();#
#throw("stop");#


