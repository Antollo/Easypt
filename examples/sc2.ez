#import("time");
import("algorithm");
import("console");
import("memory");
import("math");#

import("console");

auto futureA.=(Task(Root, {
    for (auto i.=(0).<, 10, i.++, {
        console.writeLine("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA");
    });
    return("Future A ended.");
}));

auto futureB.=(Task(Root, {
    for (auto i.=(0).<, 10, i.++, {
        console.writeLine("BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB");
    });
    return("Future B ended.");
}));

futureA.get();
futureB.get();

#auto A.=(Class(
    Object, 
    {
        basicOut("helloA");
    }.setName("A"),
    Object, 
    {
        basicOut("goodbye");
    }.setName("~~"),
));
auto a.=(A());
auto B.=(Class(
    A,
    {
        A();
        basicOut("helloB");
    }.setName("B")
));
B();
auto f.=({f();});

"launchArgs".debugTree();


auto b.=(B());#
#b.debugTree();#
#getThis().debugTree();#
#throw("stop");#


